@page
@model PRN222.Assignment.Razor.Admin.Pages.Order.IndexModel
@{
    ViewData["Title"] = "Orders";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<h1>Orders</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<!-- Search Form -->
<form method="get" class="mb-3">
    <div class="row">
        <div class="col-md-3">
            <input type="text" name="SearchOrderDate" value="@Model.SearchOrderDate"
                   class="form-control" placeholder="Search Order Date">
        </div>
        <div class="col-md-3">
            <input type="text" name="SearchStatus" value="@Model.SearchStatus"
                   class="form-control" placeholder="Search Status">
        </div>
        <div class="col-md-3">
            <input type="text" name="SearchPaymentStatus" value="@Model.SearchPaymentStatus"
                   class="form-control" placeholder="Search Payment Status">
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Subtotal)
            </th>
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.Order[0].Tax) *@
            @* </th> *@
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.Order[0].DeliveryFee) *@
            @* </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Order[0].TotalAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].PaymentMethod)
            </th>
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.Order[0].PaymentStatus) *@
            @* </th> *@
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.Order[0].DeliveryAddress) *@
            @* </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Account)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].ProcessedByNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Order)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subtotal)
                </td>
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.Tax) *@
                @* </td> *@
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.DeliveryFee) *@
                @* </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                </td>
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.PaymentStatus) *@
                @* </td> *@
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.DeliveryAddress) *@
                @* </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Account.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProcessedByNavigation.Address)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.OrderId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.OrderId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.OrderId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.PageIndex > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-page="./Index"
                       asp-route-PageIndex="@(Model.PageIndex - 1)"
                       asp-route-SearchOrderDate="@Model.SearchOrderDate"
                       asp-route-SearchStatus="@Model.SearchStatus"
                       asp-route-SearchPaymentStatus="@Model.SearchPaymentStatus">
                        Previous
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-page="./Index"
                       asp-route-PageIndex="@i"
                       asp-route-SearchOrderDate="@Model.SearchOrderDate"
                       asp-route-SearchStatus="@Model.SearchStatus"
                       asp-route-SearchPaymentStatus="@Model.SearchPaymentStatus">
                        @i
                    </a>
                </li>
            }

            @if (Model.PageIndex < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-page="./Index"
                       asp-route-PageIndex="@(Model.PageIndex + 1)"
                       asp-route-SearchOrderDate="@Model.SearchOrderDate"
                       asp-route-SearchStatus="@Model.SearchStatus"
                       asp-route-SearchPaymentStatus="@Model.SearchPaymentStatus">
                        Next
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}