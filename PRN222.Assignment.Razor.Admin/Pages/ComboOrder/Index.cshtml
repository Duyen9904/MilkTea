@page
@model PRN222.Assignment.Razor.Admin.Pages.ComboOrder.IndexModel
@{
    ViewData["Title"] = "Combo Orders";
}

<!-- External Libraries -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

<style>
    body {
        background-image: url('/images/background.jpg');
        background-size: cover;
        background-attachment: fixed;
        background-position: center;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .content-wrapper {
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
        animation: fadeIn 0.6s ease-in-out;
    }

    .card {
        border: none;
        border-radius: 12px;
        transition: transform 0.2s;
    }

        .card:hover {
            transform: scale(1.01);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        border-radius: 12px 12px 0 0;
        font-size: 1.25rem;
        font-weight: bold;
    }

    .btn {
        transition: all 0.3s ease;
    }

    .btn-success:hover, .btn-outline-success:hover {
        box-shadow: 0 0 12px rgba(40, 167, 69, 0.6);
    }

    .table td, .table th {
        vertical-align: middle;
    }

    .table tbody tr:hover {
        background-color: #f9f9f9;
        cursor: pointer;
    }

    .form-control:focus, .form-select:focus {
        box-shadow: 0 0 10px rgba(0, 123, 255, 0.25);
        border-color: #80bdff;
    }

    .badge {
        font-size: 0.85rem;
        padding: 6px 10px;
        border-radius: 50px;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
        box-shadow: 0 0 8px rgba(13, 110, 253, 0.5);
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }
</style>

<div class="container-fluid mt-4">
    <div class="content-wrapper">
        <div class="card shadow-sm animate__animated animate__fadeIn">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h3 class="m-0">Combo Orders Management</h3>
                <a asp-page="Create" class="btn btn-success">
                    <i class="fas fa-plus-circle"></i> Create New
                </a>
            </div>
            <div class="card-body">

                <!-- Search and Filter -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search orders...">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="searchButton">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="d-flex justify-content-end">
                            <select id="filterStatus" class="form-select me-2">
                                <option value="">All Orders</option>
                                <option value="pending">Pending</option>
                                <option value="completed">Completed</option>
                                <option value="cancelled">Cancelled</option>
                            </select>
                            <button id="exportButton" class="btn btn-outline-success">
                                <i class="fas fa-file-export"></i> Export
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Orders Table -->
                <div class="table-responsive">
                    <table class="table table-hover table-striped" id="comboOrdersTable">
                        <thead class="table-dark">
                            <tr>
                                <th>
                                    <a href="#" class="text-decoration-none text-white d-flex align-items-center" data-sort="quantity">
                                        @Html.DisplayNameFor(model => model.OrderCombo[0].Quantity)
                                        <i class="fas fa-sort ms-1"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-white d-flex align-items-center" data-sort="price">
                                        @Html.DisplayNameFor(model => model.OrderCombo[0].UnitPrice)
                                        <i class="fas fa-sort ms-1"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-white d-flex align-items-center" data-sort="combo">
                                        @Html.DisplayNameFor(model => model.OrderCombo[0].Combo)
                                        <i class="fas fa-sort ms-1"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-white d-flex align-items-center" data-sort="address">
                                        @Html.DisplayNameFor(model => model.OrderCombo[0].Order)
                                        <i class="fas fa-sort ms-1"></i>
                                    </a>
                                </th>
                                <th>Total Amount</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderCombo)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                                    <td>$@Html.DisplayFor(modelItem => item.UnitPrice)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Combo.ComboName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Order.DeliveryAddress)</td>
                                    <td>$@(item.Quantity * item.UnitPrice)</td>
                                    <td>
                                        @{
                                            string badgeClass = "badge bg-info";
                                            string status = "Processing";

                                            if (item.OrderComboId % 3 == 0)
                                            {
                                                badgeClass = "badge bg-success";
                                                status = "Completed";
                                            }
                                            else if (item.OrderComboId % 5 == 0)
                                            {
                                                badgeClass = "badge bg-danger";
                                                status = "Cancelled";
                                            }
                                        }
                                        <span class="@badgeClass">@status</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-page="./Edit" asp-route-id="@item.OrderComboId" class="btn btn-sm btn-primary me-1" data-bs-toggle="tooltip" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-page="./Details" asp-route-id="@item.OrderComboId" class="btn btn-sm btn-info me-1" data-bs-toggle="tooltip" title="Details">
                                                <i class="fas fa-info-circle"></i>
                                            </a>
                                            <a asp-page="./Delete" asp-route-id="@item.OrderComboId" class="btn btn-sm btn-danger" data-bs-toggle="tooltip" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled"><a class="page-link" href="#" tabindex="-1">Previous</a></li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item"><a class="page-link" href="#">Next</a></li>
                    </ul>
                </nav>

                <!-- Order Summary -->
                <div class="row mt-4">
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h5 class="card-title">
                                    <i class="fas fa-chart-pie text-primary me-2"></i> Order Summary
                                </h5>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        Total Orders
                                        <span class="badge bg-primary rounded-pill">@Model.OrderCombo.Count</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        Completed Orders
                                        <span class="badge bg-success rounded-pill">@Model.OrderCombo.Count(o => o.OrderComboId % 3 == 0)</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        Pending Orders
                                        <span class="badge bg-info rounded-pill">@Model.OrderCombo.Count(o => o.OrderComboId % 3 != 0 && o.OrderComboId % 5 != 0)</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        Cancelled Orders
                                        <span class="badge bg-danger rounded-pill">@Model.OrderCombo.Count(o => o.OrderComboId % 5 == 0)</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Toast -->
                <div class="toast-container position-fixed bottom-0 end-0 p-3">
                    <div id="exportToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                Export started successfully!
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            document.getElementById('searchButton').addEventListener('click', function () {
                const searchValue = document.getElementById('searchInput').value.toLowerCase();
                const rows = document.querySelectorAll('#comboOrdersTable tbody tr');
                rows.forEach(row => {
                    row.style.display = row.textContent.toLowerCase().includes(searchValue) ? '' : 'none';
                });
            });

            document.getElementById('filterStatus').addEventListener('change', function () {
                const filterValue = this.value.toLowerCase();
                const rows = document.querySelectorAll('#comboOrdersTable tbody tr');
                rows.forEach(row => {
                    const statusCell = row.cells[5];
                    row.style.display = filterValue === '' || statusCell.textContent.toLowerCase().includes(filterValue) ? '' : 'none';
                });
            });

            document.querySelectorAll('[data-sort]').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    const column = this.getAttribute('data-sort');
                    console.log('Sorting by', column);
                    // Add your sorting logic here
                });
            });

            document.getElementById('exportButton').addEventListener('click', function () {
                const toast = new bootstrap.Toast(document.getElementById('exportToast'));
                toast.show();
            });
        });
    </script>
}
